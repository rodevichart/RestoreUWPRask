#pragma checksum "D:\MovieLibrarySolution\MovieLibrary\Views\Page2.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "B47F647F216E35EF0F2713377F493936"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieLibrary.Views
{
    partial class Page2 : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
        };

        private class Page2_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPage2_Bindings
        {
            private global::MovieLibrary.Views.Page2 dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBox obj3;
            private global::Windows.UI.Xaml.Controls.TextBox obj4;
            private global::Windows.UI.Xaml.Controls.TextBox obj5;
            private global::Windows.UI.Xaml.Controls.TextBox obj6;
            private global::Windows.UI.Xaml.Controls.TextBox obj7;
            private global::Windows.UI.Xaml.Controls.Image obj8;
            private global::Windows.UI.Xaml.Controls.ListView obj9;

            private Page2_obj1_BindingsTracking bindingsTracking;

            public Page2_obj1_Bindings()
            {
                this.bindingsTracking = new Page2_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj3).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.FilmCollection.SelectedFilm.Title = (this.obj3).Text;
                                }
                            };
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj4).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.FilmCollection.SelectedFilm.Director = (this.obj4).Text;
                                }
                            };
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj5).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.FilmCollection.SelectedFilm.ReleaseYear = (this.obj5).Text;
                                }
                            };
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj6).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.FilmCollection.SelectedFilm.Duration = (this.obj6).Text;
                                }
                            };
                        break;
                    case 7:
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj7).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.FilmCollection.SelectedFilm.Poster = (this.obj7).Text;
                                }
                            };
                        break;
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        (this.obj9).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.FilmCollection.SelectedIndex = (this.obj9).SelectedIndex;
                                }
                            });
                        break;
                    default:
                        break;
                }
            }

            // IPage2_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Page2_obj1_Bindings

            public void SetDataRoot(global::MovieLibrary.Views.Page2 newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MovieLibrary.Views.Page2 obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FilmCollection(obj.FilmCollection, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_FilmCollection(phase);
                    }
                }
            }
            private void Update_FilmCollection(global::MovieLibrary.ViewModels.FilmCollectionViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_FilmCollection(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FilmCollection_SelectedFilm(obj.SelectedFilm, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_FilmCollection_Films(obj.Films, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FilmCollection_SelectedIndex(obj.SelectedIndex, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_FilmCollection_SelectedFilm(phase);
                    }
                }
            }
            private void Update_FilmCollection_SelectedFilm(global::MovieLibrary.ViewModels.FilmViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_FilmCollection_SelectedFilm(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FilmCollection_SelectedFilm_Title(obj.Title, phase);
                        this.Update_FilmCollection_SelectedFilm_Director(obj.Director, phase);
                        this.Update_FilmCollection_SelectedFilm_ReleaseYear(obj.ReleaseYear, phase);
                        this.Update_FilmCollection_SelectedFilm_Duration(obj.Duration, phase);
                        this.Update_FilmCollection_SelectedFilm_Poster(obj.Poster, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_FilmCollection_SelectedFilm_Title(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_FilmCollection_SelectedFilm_Director(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_FilmCollection_SelectedFilm_ReleaseYear(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_FilmCollection_SelectedFilm_Duration(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_FilmCollection_SelectedFilm_Poster(phase);
                    }
                }
            }
            private void Update_FilmCollection_SelectedFilm_Title(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj3, obj, null);
                }
            }
            private void Update_FilmCollection_SelectedFilm_Director(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, obj, null);
                }
            }
            private void Update_FilmCollection_SelectedFilm_ReleaseYear(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                }
            }
            private void Update_FilmCollection_SelectedFilm_Duration(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj6, obj, null);
                }
            }
            private void Update_FilmCollection_SelectedFilm_Poster(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj7, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj8, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
            private void Update_FilmCollection_Films(global::System.Collections.ObjectModel.ObservableCollection<global::MovieLibrary.ViewModels.FilmViewModel> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                }
            }
            private void Update_FilmCollection_SelectedIndex(global::System.Int32 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj9, obj);
                }
            }

            private void UpdateFallback_FilmCollection(int phase)
            {
                this.UpdateFallback_FilmCollection_SelectedFilm(phase);
            }

            private void UpdateFallback_FilmCollection_SelectedFilm(int phase)
            {
                this.UpdateFallback_FilmCollection_SelectedFilm_Title(phase);
                this.UpdateFallback_FilmCollection_SelectedFilm_Director(phase);
                this.UpdateFallback_FilmCollection_SelectedFilm_ReleaseYear(phase);
                this.UpdateFallback_FilmCollection_SelectedFilm_Duration(phase);
                this.UpdateFallback_FilmCollection_SelectedFilm_Poster(phase);
            }

            private void UpdateFallback_FilmCollection_SelectedFilm_Title(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj3, "", null);
                }
            }

            private void UpdateFallback_FilmCollection_SelectedFilm_Director(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, "", null);
                }
            }

            private void UpdateFallback_FilmCollection_SelectedFilm_ReleaseYear(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, "", null);
                }
            }

            private void UpdateFallback_FilmCollection_SelectedFilm_Duration(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj6, "", null);
                }
            }

            private void UpdateFallback_FilmCollection_SelectedFilm_Poster(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj7, "", null);
                }
            }

            private class Page2_obj1_BindingsTracking
            {
                global::System.WeakReference<Page2_obj1_Bindings> WeakRefToBindingObj; 

                public Page2_obj1_BindingsTracking(Page2_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Page2_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_FilmCollection(null);
                    UpdateChildListeners_FilmCollection_SelectedFilm(null);
                }

                public void PropertyChanged_FilmCollection(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Page2_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MovieLibrary.ViewModels.FilmCollectionViewModel obj = sender as global::MovieLibrary.ViewModels.FilmCollectionViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_FilmCollection_SelectedFilm(obj.SelectedFilm, DATA_CHANGED);
                                    bindings.Update_FilmCollection_SelectedIndex(obj.SelectedIndex, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_FilmCollection_SelectedFilm(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedFilm":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmCollection_SelectedFilm(obj.SelectedFilm, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_FilmCollection_SelectedFilm(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmCollection_SelectedIndex(obj.SelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::MovieLibrary.ViewModels.FilmCollectionViewModel cache_FilmCollection = null;
                public void UpdateChildListeners_FilmCollection(global::MovieLibrary.ViewModels.FilmCollectionViewModel obj)
                {
                    if (obj != cache_FilmCollection)
                    {
                        if (cache_FilmCollection != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_FilmCollection).PropertyChanged -= PropertyChanged_FilmCollection;
                            cache_FilmCollection = null;
                        }
                        if (obj != null)
                        {
                            cache_FilmCollection = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_FilmCollection;
                        }
                    }
                }
                public void PropertyChanged_FilmCollection_SelectedFilm(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Page2_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MovieLibrary.ViewModels.FilmViewModel obj = sender as global::MovieLibrary.ViewModels.FilmViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_FilmCollection_SelectedFilm_Title(obj.Title, DATA_CHANGED);
                                    bindings.Update_FilmCollection_SelectedFilm_Director(obj.Director, DATA_CHANGED);
                                    bindings.Update_FilmCollection_SelectedFilm_ReleaseYear(obj.ReleaseYear, DATA_CHANGED);
                                    bindings.Update_FilmCollection_SelectedFilm_Duration(obj.Duration, DATA_CHANGED);
                                    bindings.Update_FilmCollection_SelectedFilm_Poster(obj.Poster, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_FilmCollection_SelectedFilm_Title(DATA_CHANGED);
                                bindings.UpdateFallback_FilmCollection_SelectedFilm_Director(DATA_CHANGED);
                                bindings.UpdateFallback_FilmCollection_SelectedFilm_ReleaseYear(DATA_CHANGED);
                                bindings.UpdateFallback_FilmCollection_SelectedFilm_Duration(DATA_CHANGED);
                                bindings.UpdateFallback_FilmCollection_SelectedFilm_Poster(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmCollection_SelectedFilm_Title(obj.Title, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_FilmCollection_SelectedFilm_Title(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Director":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmCollection_SelectedFilm_Director(obj.Director, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_FilmCollection_SelectedFilm_Director(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReleaseYear":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmCollection_SelectedFilm_ReleaseYear(obj.ReleaseYear, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_FilmCollection_SelectedFilm_ReleaseYear(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Duration":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmCollection_SelectedFilm_Duration(obj.Duration, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_FilmCollection_SelectedFilm_Duration(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Poster":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmCollection_SelectedFilm_Poster(obj.Poster, DATA_CHANGED);
                                    }
                                    else
                                    {
                                    bindings.UpdateFallback_FilmCollection_SelectedFilm_Poster(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::MovieLibrary.ViewModels.FilmViewModel cache_FilmCollection_SelectedFilm = null;
                public void UpdateChildListeners_FilmCollection_SelectedFilm(global::MovieLibrary.ViewModels.FilmViewModel obj)
                {
                    if (obj != cache_FilmCollection_SelectedFilm)
                    {
                        if (cache_FilmCollection_SelectedFilm != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_FilmCollection_SelectedFilm).PropertyChanged -= PropertyChanged_FilmCollection_SelectedFilm;
                            cache_FilmCollection_SelectedFilm = null;
                        }
                        if (obj != null)
                        {
                            cache_FilmCollection_SelectedFilm = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_FilmCollection_SelectedFilm;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.DirectorName = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    #line 23 "..\..\..\Views\Page2.xaml"
                    ((global::Windows.UI.Xaml.Controls.TextBox)this.DirectorName).KeyUp += this.DirectorName_OnKeyUp;
                    #line default
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    Page2_obj1_Bindings bindings = new Page2_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

