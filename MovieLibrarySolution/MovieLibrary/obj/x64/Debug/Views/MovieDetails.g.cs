#pragma checksum "D:\C# Tasks\RestoreUwp\MovieLibrarySolution\MovieLibrary\Views\MovieDetails.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "F6C1A02BA5F41DECC69EF175917C0ED9"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieLibrary.Views
{
    partial class MovieDetails : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class MovieDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMovieDetails_Bindings
        {
            private global::MovieLibrary.Views.MovieDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Image obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj6;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj7;

            private MovieDetails_obj1_BindingsTracking bindingsTracking;

            public MovieDetails_obj1_Bindings()
            {
                this.bindingsTracking = new MovieDetails_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2:
                        this.obj2 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7:
                        this.obj7 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        break;
                    default:
                        break;
                }
            }

            // IMovieDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // MovieDetails_obj1_Bindings

            public void SetDataRoot(global::MovieLibrary.Views.MovieDetails newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MovieLibrary.Views.MovieDetails obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FilmViewModel(obj.FilmViewModel, phase);
                    }
                }
            }
            private void Update_FilmViewModel(global::MovieLibrary.ViewModels.FilmViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_FilmViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FilmViewModel_Poster(obj.Poster, phase);
                        this.Update_FilmViewModel_Title(obj.Title, phase);
                        this.Update_FilmViewModel_Duration(obj.Duration, phase);
                        this.Update_FilmViewModel_Director(obj.Director, phase);
                        this.Update_FilmViewModel_ReleaseYear(obj.ReleaseYear, phase);
                    }
                }
            }
            private void Update_FilmViewModel_Poster(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj7, obj, null);
                }
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj2, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
            private void Update_FilmViewModel_Title(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                }
            }
            private void Update_FilmViewModel_Duration(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                }
            }
            private void Update_FilmViewModel_Director(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                }
            }
            private void Update_FilmViewModel_ReleaseYear(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj6, obj, null);
                }
            }

            private class MovieDetails_obj1_BindingsTracking
            {
                global::System.WeakReference<MovieDetails_obj1_Bindings> WeakRefToBindingObj; 

                public MovieDetails_obj1_BindingsTracking(MovieDetails_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<MovieDetails_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_FilmViewModel(null);
                }

                public void PropertyChanged_FilmViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MovieDetails_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MovieLibrary.ViewModels.FilmViewModel obj = sender as global::MovieLibrary.ViewModels.FilmViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_FilmViewModel_Poster(obj.Poster, DATA_CHANGED);
                                    bindings.Update_FilmViewModel_Title(obj.Title, DATA_CHANGED);
                                    bindings.Update_FilmViewModel_Duration(obj.Duration, DATA_CHANGED);
                                    bindings.Update_FilmViewModel_Director(obj.Director, DATA_CHANGED);
                                    bindings.Update_FilmViewModel_ReleaseYear(obj.ReleaseYear, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Poster":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmViewModel_Poster(obj.Poster, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmViewModel_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Duration":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmViewModel_Duration(obj.Duration, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Director":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmViewModel_Director(obj.Director, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReleaseYear":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FilmViewModel_ReleaseYear(obj.ReleaseYear, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::MovieLibrary.ViewModels.FilmViewModel cache_FilmViewModel = null;
                public void UpdateChildListeners_FilmViewModel(global::MovieLibrary.ViewModels.FilmViewModel obj)
                {
                    if (obj != cache_FilmViewModel)
                    {
                        if (cache_FilmViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_FilmViewModel).PropertyChanged -= PropertyChanged_FilmViewModel;
                            cache_FilmViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_FilmViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_FilmViewModel;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MovieDetails_obj1_Bindings bindings = new MovieDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

